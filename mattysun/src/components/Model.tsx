/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame, useLoader, useThree } from '@react-three/fiber'
import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry'
import { FontLoader } from 'three/examples/jsm/loaders/FontLoader';
import * as THREE from 'three'
import helveticaRegular from 'three/examples/fonts/helvetiker_regular.typeface.json'

const deg2Rad = (deg: number) => {
  return deg * (Math.PI / 180)
}

export const Model = (props: any) => {
  const { camera } = useThree()
  const [sunPos, setSunPos] = React.useState<THREE.Vector3>(new THREE.Vector3(-2, 0, -3))

  camera.position.set(0, 0, 15); // Set position like this
  camera.lookAt(new THREE.Vector3(0, 0, 0)); // Set look at coordinate like this
  camera.layers.enable(1)

  const groupRef = useRef()
  const sunRef = useRef<THREE.Vector3>()
  const { nodes, materials, scene } = useGLTF('/models/scene-v1.glb')
  const cloudMaterial = new THREE.MeshStandardMaterial({color: 'white'})
  const sunMaterial = new THREE.MeshBasicMaterial({color: 'orange'})

  useEffect(() => {
    if (!sunRef.current) {
      sunRef.current = new THREE.Vector3(-2, 0, -3)
    }
    sunRef.current = new THREE.Vector3(-2, 0, -3)
  }, [])
  
  // every frame, move the sun around the cloud
  useFrame((state, delta) => {
    const t = state.clock.getElapsedTime()
    const x = -1 - 1.5* Math.sin(t / 2) * 2
    const y = 1 + 1.5 * Math.cos(t / 2) * 2
    const z = -3 + Math.sin(t / 2) * 2
    setSunPos((prev) => new THREE.Vector3(x, y, z))
  })

  
  return (
    <group ref={groupRef} {...props} dispose={null}>
      <directionalLight color="white" position={[2, 0.5, -1]} layers={0} />

      <mesh 
        geometry={(nodes.Cloud__0 as THREE.Mesh).geometry} 
        position={[2, 0.5, -1]} 
        material={cloudMaterial} 
        scale={0.6}
        rotation={[deg2Rad(-66), deg2Rad(0), deg2Rad(-10)]}
        layers={0}
      />
      <mesh 
        position={sunPos}
        scale={2}
        geometry={(nodes.Sphere_sun_0 as THREE.Mesh).geometry} 
        material={sunMaterial} 
        layers={0}
      />
    </group>
  )
}

useGLTF.preload('/models/scene-v1.glb')
